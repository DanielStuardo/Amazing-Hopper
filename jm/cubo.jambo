
/*
[[File:Captura_de_pantalla_de_2022-10-11_12-38-33.png|200px|thumb|rigth|Caption]]

rxvt -g 500x250 -fn "xft:FantasqueSansMono-Regular:pixelsize=1" -e ./bin/cubo

*/

#context-free Draw a cube
//   Color back 'color'
   Loop for (i=1, #(i<=3), ++i)
      Draw a line (size_2, {size_2} Minus(scale_zoff), [i] Get 'x', {size_2} Minus(scale x zoff) )
      Draw a line (size_2, {size_2} Plus(scale_zoff), [{7}Minus(i)] Get 'x' , {size_2} Plus(scale x zoff) )
      Draw a line ([i] Get 'x', {size_2} Minus(scale x zoff), [Minusone(i) Module(3) Plus(4)] Get 'x', {size_2} Plus(scale x zoff) )
      Draw a line ([i] Get 'x', {size_2} Minus(scale x zoff), [{i} Module(3) Plus(4)] Get 'x', {size_2} Plus(scale x zoff) )
   Next
Return\\

#context-free Delete old cube
   Color back '0', Draw a cube
Return\\

#context-free Setting values of program
   Set( Div(M_PI,6), Mul(5,Div(M_PI,6)), Mul(3,M_PI_2), Mul(11,Div(M_PI,6)), M_PI_2, Mul(7,Div(M_PI,6)) )
   Append to list 'cylphi'
   
   /* pre-cÃ¡lculos */
   Let ( dt := Div(1,30 ))
   Let (size_2 := Div( SIZE, 2))
   Let (scale_zoff := Div( SCALE,zoff))
   Let (scale x zoff := Mul (SCALE, zoff))
/*   Let ( size_2 minus scale_zoff := {size_2} Minus(scale_zoff) )
   Let ( size_2 plus scale_zoff := {size_2} Plus(scale_zoff) )
   Let ( size_2 minus scale x zoff := {size_2} Minus(scale x zoff) )
   Let ( size_2 plus scale x zoff := {size_2} Plus(scale x zoff) ) */
Return \\

#include <jambo.h>

/*
rxvt -g 250x250 -fn "xft:FantasqueSansMono-Regular:pixelsize=1" -e hopper jm/cubo.jambo
*/

///#define PI 3.14159265358979323
#define SCALE 50 //50
#define SIZE 200  //320
#define zoff 0.5773502691896257645091487805019574556
#define cylr 1.6329931618554520654648560498039275946

Main
   Set break
   theta=0, dtheta=1.5, lasttime=0, dt=0 , timer=0
   size_2=0, scale_zoff=0, scale x zoff=0, cylphi = {}
//   size_2 minus scale_zoff=0, size_2 plus scale_zoff=0, size_2 minus scale x zoff=0
//   size_2 plus scale x zoff=0

   Dim (6) as zeros (x)
   
   Setting values of program 
      
   Cls  //, Set decimal '0'
   /* Draw a cube */
   Loop while ( Not (Keypressed))
       Tic(lasttime)
       Loop for( i=1, #(i<=6), ++i )
           Add( size_2, Mul( Mul(SCALE,cylr), Cos( [i] Get 'cylphi' Plus 'theta')) )
           Put 'x'
       Next
       Color back '15', Draw a cube
       
       Loop 
           Timecpu(timer)
       While ( This 'timer' Compared to 'Add(lasttime, dt)' Is less )
       
       Let ( theta := Add( theta, Mul( dtheta, Sub(timer, lasttime)))) 
      // Let (theta := Add(theta, 0.01))
       Sleep (0.01)
       Delete old cube
   Back
   Color back '15', Draw a cube
   Pause
End
Subrutines
/*Define 'Draw a cube, color'
   Color back 'color'
   Loop for (i=1, #(i<=3), ++i)
//      Draw a line (size_2, size_2 minus scale_zoff, [i] Get 'x', size_2 minus scale x zoff )
//      Draw a line (size_2, size_2 plus scale_zoff, [{7}Minus(i)] Get 'x' , size_2 plus scale x zoff )
//      Draw a line ([i] Get 'x', size_2 minus scale x zoff, [Minusone(i) Module(3) Plus(4)] Get 'x', size_2 plus scale x zoff )
//      Draw a line ([i] Get 'x', size_2 minus scale x zoff, [{i} Module(3) Plus(4)] Get 'x', size_2 plus scale x zoff )
      Draw a line (size_2, {size_2} Minus(scale_zoff), [i] Get 'x', {size_2} Minus(scale x zoff) )
      Draw a line (size_2, {size_2} Plus(scale_zoff), [{7}Minus(i)] Get 'x' , {size_2} Plus(scale x zoff) )
      Draw a line ([i] Get 'x', {size_2} Minus(scale x zoff), [Minusone(i) Module(3) Plus(4)] Get 'x', {size_2} Plus(scale x zoff) )
      Draw a line ([i] Get 'x', {size_2} Minus(scale x zoff), [{i} Module(3) Plus(4)] Get 'x', {size_2} Plus(scale x zoff) )
   Next
Return*/

/*Define 'Delete old cube'
   Color back '0', Draw a cube
Return*/
/*
///screenres SIZE, SIZE, 4

dim as double theta = 0.0, dtheta = 1.5, x(0 to 5), lasttime, dt = 1./30

dim as double cylphi(0 to 5) = {PI/6, 5*PI/6, 3*PI/2, 11*PI/6, PI/2, 7*PI/6}

sub drawcube( x() as double, colour as uinteger )
    for i as uinteger = 0 to 2
        line (SIZE/2, SIZE/2-SCALE/zoff) - (x(i), SIZE/2-SCALE*zoff), colour
        line (SIZE/2, SIZE/2+SCALE/zoff) - (x(5-i), SIZE/2+SCALE*zoff), colour
        line ( x(i), SIZE/2-SCALE*zoff ) - ( x(i mod 3 + 3), SIZE/2+SCALE*zoff ), colour
        line ( x(i), SIZE/2-SCALE*zoff ) - ( x((i+1) mod 3 + 3), SIZE/2+SCALE*zoff ), colour
    next i
end sub

while inkey=""
    lasttime = timer
    for i as uinteger = 0 to 5
        x(i) = SIZE/2 + SCALE*cylr*cos(cylphi(i)+theta)
    next i
    drawcube x(), 15
    
    while timer < lasttime + dt
    wend
    theta += dtheta*(timer-lasttime)
    drawcube x(),0
wend
end
*/
