
#include <jambo.h>

#defn Sqradd(_X_,_Y_)     #ATOM #CMPLX;#ATOM #CMPLX;sqradd;
#defn Sqrdiff(_X_,_Y_)    #ATOM #CMPLX;#ATOM #CMPLX;sqrdiff;
Main
   Set stack 15
   Cls
   map = {}
 //  c = 0, Let (c:=Utf8(Chr(219)))
   Set '" ", ".", ":", "-", "=", "+", "*", "#", "%", "$", "@"', Apnd list 'map'
 //  Set '" ", c, c, c, c, c, c, c, c, c, c', Apnd list 'map'

   Loop for ( y= -1.0, Less equal (y,1.0), Let ( y:=Add(y,0.05)) )
       Loop for ( x= -1.5, Less equal (x,1.5), Let ( x:=Add(x,0.025)) )
           zr = x, zi = y, i = 0, br = 0
           Loop
               Let ( br := Sqr diff(zr,zi) Minus '0.8' )
               Let ( zi := Mul(Mul(zr, zi), 2), Plus '0.156' )
               zr = br
               Break if ( Greater ( Sqr add (zr, zi), 4 ) )
               ++i
           While ( Less equal (i, 100) )
           Colorfore( Int div(i,11) Plus '91' )
           Print ( [ Intdiv(i,11) Plus(1)] Get 'map' )
       Next
       Prnl
   Next
   Prnl
   Pause
End


/*
local cmap = { [0]=" ", ".", ":", "-", "=", "+", "*", "#", "%", "$", "@" }
for y = -1.0, 1.0, 0.05 do
  for x = -1.5, 1.5, 0.025 do
    local zr, zi, i = x, y, 0
    while i < 100 do
      zr, zi = zr*zr - zi*zi - 0.79, zr * zi * 2 + 0.15
      if (zr*zr + zi*zi > 4) then break else i = i + 1 end
    end
    io.write(cmap[math.floor(i/10)])
  end
  print()
end*/
